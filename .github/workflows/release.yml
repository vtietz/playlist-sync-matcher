name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-cli:
    name: Build CLI - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: psm-cli.exe
            asset_name: psm-cli-windows-amd64.exe
          - os: ubuntu-latest
            artifact_name: psm-cli
            asset_name: psm-cli-linux-amd64
          - os: macos-latest
            artifact_name: psm-cli
            asset_name: psm-cli-macos-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build CLI executable with PyInstaller
        run: pyinstaller psm-cli.spec

      - name: Test CLI executable (smoke test)
        run: dist/${{ matrix.artifact_name }} --version
        shell: bash

      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: dist/${{ matrix.artifact_name }}

  build-gui:
    name: Build GUI - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: psm-gui.exe
            asset_name: psm-gui-windows-amd64.exe
          - os: ubuntu-latest
            artifact_name: psm-gui
            asset_name: psm-gui-linux-amd64
          - os: macos-latest
            artifact_name: psm-gui
            asset_name: psm-gui-macos-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.12-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.12-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build GUI executable with PyInstaller
        run: pyinstaller psm-gui.spec

      - name: Test GUI executable (smoke test - check file exists)
        run: |
          if [ ! -f "dist/${{ matrix.artifact_name }}" ]; then
            echo "GUI executable not found!"
            exit 1
          fi
          echo "GUI executable built successfully"
        shell: bash

      - name: Upload GUI artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: dist/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: [build-cli, build-gui]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
